/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.wavemaker.financeai.sectorperformance.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.wavemaker.financeai.sectorperformance.model.ResponseIndicesEntryItem;
import com.wavemaker.financeai.sectorperformance.model.ResponseSectorPerformanceEntryItem;
import java.util.ArrayList;
import java.util.List;
/**
 * RootResponse
 */

public class RootResponse {
  @JsonProperty("market")
  private String market = null;

  @JsonProperty("indices")
  private List<ResponseIndicesEntryItem> indices = new ArrayList<>();

  @JsonProperty("sectorPerformance")
  private List<ResponseSectorPerformanceEntryItem> sectorPerformance = new ArrayList<>();

  @JsonProperty("asOfDate")
  private String asOfDate = null;

  public RootResponse market(String market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  public String getMarket() {
    return market;
  }

  public void setMarket(String market) {
    this.market = market;
  }

  public RootResponse indices(List<ResponseIndicesEntryItem> indices) {
    this.indices = indices;
    return this;
  }

  public RootResponse addIndicesItem(ResponseIndicesEntryItem indicesItem) {
    this.indices.add(indicesItem);
    return this;
  }

   /**
   * Get indices
   * @return indices
  **/
  public List<ResponseIndicesEntryItem> getIndices() {
    return indices;
  }

  public void setIndices(List<ResponseIndicesEntryItem> indices) {
    this.indices = indices;
  }

  public RootResponse sectorPerformance(List<ResponseSectorPerformanceEntryItem> sectorPerformance) {
    this.sectorPerformance = sectorPerformance;
    return this;
  }

  public RootResponse addSectorPerformanceItem(ResponseSectorPerformanceEntryItem sectorPerformanceItem) {
    this.sectorPerformance.add(sectorPerformanceItem);
    return this;
  }

   /**
   * Get sectorPerformance
   * @return sectorPerformance
  **/
  public List<ResponseSectorPerformanceEntryItem> getSectorPerformance() {
    return sectorPerformance;
  }

  public void setSectorPerformance(List<ResponseSectorPerformanceEntryItem> sectorPerformance) {
    this.sectorPerformance = sectorPerformance;
  }

  public RootResponse asOfDate(String asOfDate) {
    this.asOfDate = asOfDate;
    return this;
  }

   /**
   * Get asOfDate
   * @return asOfDate
  **/
  public String getAsOfDate() {
    return asOfDate;
  }

  public void setAsOfDate(String asOfDate) {
    this.asOfDate = asOfDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RootResponse RootResponse = (RootResponse) o;
    return Objects.equals(this.market, RootResponse.market) &&
        Objects.equals(this.indices, RootResponse.indices) &&
        Objects.equals(this.sectorPerformance, RootResponse.sectorPerformance) &&
        Objects.equals(this.asOfDate, RootResponse.asOfDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(market, indices, sectorPerformance, asOfDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RootResponse {\n");
    
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    indices: ").append(toIndentedString(indices)).append("\n");
    sb.append("    sectorPerformance: ").append(toIndentedString(sectorPerformance)).append("\n");
    sb.append("    asOfDate: ").append(toIndentedString(asOfDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
