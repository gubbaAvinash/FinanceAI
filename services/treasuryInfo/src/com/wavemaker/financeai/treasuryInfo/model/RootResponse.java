/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.wavemaker.financeai.treasuryInfo.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.wavemaker.financeai.treasuryInfo.model.ResponseYieldCurveEntryItem;
import java.util.ArrayList;
import java.util.List;
/**
 * RootResponse
 */

public class RootResponse {
  @JsonProperty("market")
  private String market = null;

  @JsonProperty("unit")
  private String unit = null;

  @JsonProperty("notes")
  private String notes = null;

  @JsonProperty("yieldCurve")
  private List<ResponseYieldCurveEntryItem> yieldCurve = new ArrayList<>();

  @JsonProperty("asOfDate")
  private String asOfDate = null;

  public RootResponse market(String market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  public String getMarket() {
    return market;
  }

  public void setMarket(String market) {
    this.market = market;
  }

  public RootResponse unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public RootResponse notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public RootResponse yieldCurve(List<ResponseYieldCurveEntryItem> yieldCurve) {
    this.yieldCurve = yieldCurve;
    return this;
  }

  public RootResponse addYieldCurveItem(ResponseYieldCurveEntryItem yieldCurveItem) {
    this.yieldCurve.add(yieldCurveItem);
    return this;
  }

   /**
   * Get yieldCurve
   * @return yieldCurve
  **/
  public List<ResponseYieldCurveEntryItem> getYieldCurve() {
    return yieldCurve;
  }

  public void setYieldCurve(List<ResponseYieldCurveEntryItem> yieldCurve) {
    this.yieldCurve = yieldCurve;
  }

  public RootResponse asOfDate(String asOfDate) {
    this.asOfDate = asOfDate;
    return this;
  }

   /**
   * Get asOfDate
   * @return asOfDate
  **/
  public String getAsOfDate() {
    return asOfDate;
  }

  public void setAsOfDate(String asOfDate) {
    this.asOfDate = asOfDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RootResponse RootResponse = (RootResponse) o;
    return Objects.equals(this.market, RootResponse.market) &&
        Objects.equals(this.unit, RootResponse.unit) &&
        Objects.equals(this.notes, RootResponse.notes) &&
        Objects.equals(this.yieldCurve, RootResponse.yieldCurve) &&
        Objects.equals(this.asOfDate, RootResponse.asOfDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(market, unit, notes, yieldCurve, asOfDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RootResponse {\n");
    
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    yieldCurve: ").append(toIndentedString(yieldCurve)).append("\n");
    sb.append("    asOfDate: ").append(toIndentedString(asOfDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
